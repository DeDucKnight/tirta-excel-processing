# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QFileDialog, QMessageBox
import pandas as pd

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(640, 480)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Upload Button
        self.uploadButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.uploadButton.setGeometry(QtCore.QRect(20, 10, 161, 41))
        self.uploadButton.setObjectName("uploadButton")

        # Label to Display File Name
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(210, 10, 400, 41))  # Increased width for longer filenames
        self.label.setObjectName("label")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 640, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Connect the button click event to the custom slot
        self.uploadButton.clicked.connect(self.on_uploadButton_clicked)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Excel File Reader"))
        self.uploadButton.setText(_translate("MainWindow", "Browse Excel File"))
        self.label.setText(_translate("MainWindow", "No file selected"))

    def on_uploadButton_clicked(self):
        options = QFileDialog.Option.DontUseNativeDialog
        file_filter = "Excel Files (*.xlsx *.xls)"  # Restrict to Excel files only
        file_name, _ = QFileDialog.getOpenFileName(
            None, "Select Excel File", "", file_filter, options=options
        )

        if file_name:
            self.label.setText(file_name)  # Display the selected file path in the label
            try:
                df = pd.read_excel(file_name)  # Read Excel file into a pandas DataFrame
                preview = df.head().to_string(index=False)  # Get first few rows as string

                # Show the Excel content in a message box
                QMessageBox.information(None, "Excel Preview", f"First 5 Rows:\n{preview}")

            except Exception as e:
                QMessageBox.critical(None, "Error", f"Failed to read file:\n{str(e)}")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
